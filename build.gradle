buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'


group = 'club.iananderson'
version = '1.4.13'

java {
    archivesBaseName = 'seasonhud-1.16.5'
    toolchain.languageVersion = JavaLanguageVersion.of(8)
}

minecraft {
    mappings channel: 'parchment', version: '2022.03.06-1.16.5'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                seasonhud {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                seasonhud {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'seasonhud', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                seasonhud {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        name = "CurseMaven"
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }

        maven {
            url = "https://maven.theillusivec4.top/"
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.39'

    /Serene Seasons/
    implementation "curse.maven:serene-seasons-291874:3894514"
    implementation "curse.maven:serene-seasons-291874:3894516"
//    compileOnly "curse.maven:serene-seasons-291874:3894517"

    /Curios/
//    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.16.5-4.0.8.2")
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.16.5-4.0.8.2:api")


    /FTB Chunks/
    compileOnly fg.deobf("curse.maven:ftb-library-forge-404465:3553840")
    compileOnly fg.deobf("curse.maven:architectury-api-419699:3857643")
    compileOnly fg.deobf("curse.maven:ftb-teams-forge-404468:3535953")
    compileOnly fg.deobf("curse.maven:ftb-chunks-forge-314906:4135807")

//    implementation fg.deobf("curse.maven:ftb-library-forge-404465:3553840")
//    implementation fg.deobf("curse.maven:architectury-api-419699:3857643")
//    implementation fg.deobf("curse.maven:ftb-teams-forge-404468:3535953")
//    implementation fg.deobf("curse.maven:ftb-chunks-forge-314906:4135807")

    /Xaero's Minimap/
    compileOnly fg.deobf("curse.maven:xaeros-minimap-263420:4381115")
    compileOnly fg.deobf("curse.maven:xaeros-minimap-fair-play-edition-263466:4429583") //Fairplay
//    implementation fg.deobf("curse.maven:xaeros-minimap-263420:4381115")
//    implementation fg.deobf("curse.maven:xaeros-minimap-fair-play-edition-263466:4429583") // Fairplay

    /JourneyMap/
    compileOnly fg.deobf("curse.maven:journeymap-32274:4012858")
//    implementation fg.deobf("curse.maven:journeymap-32274:4012858")

}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "seasonhud",
                //"Specification-Vendor": "seasonhud authors",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                //"Implementation-Vendor": "seasonhud authors",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}