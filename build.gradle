buildscript {
    repositories {
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
}

apply plugin: 'org.spongepowered.mixin'

version = mod_version
group = mod_group_id

java {
    archivesBaseName = "${mod_id}-${minecraft_version}"
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
    mappings channel: mapping_channel, version: mapping_version

    copyIdeResources = true

    runs {
        configureEach {
            workingDirectory project.file('run')

            ideaModule "${rootProject.name}.${project.name}.main"

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        client {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        server {
            property 'forge.enabledGameTestNamespaces', mod_id
            args '--nogui'
        }

        gameTestServer {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        data {
            workingDirectory project.file('run-data')

            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

mixin {
    add sourceSets.main, "${mod_id}.refmap.json"

    config "${mod_id}.mixins.json"
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {

    maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }

    maven {
        name = "CurseMaven"
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }

    maven {
        url = "https://maven.theillusivec4.top/"
    }
}

dependencies {

    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    /Serene Seasons/
    implementation "curse.maven:serene-seasons-291874:4611121"
    implementation "curse.maven:serene-seasons-291874:4611122"
//    compileOnly "curse.maven:serene-seasons-291874:4611123" //api

    /Curios/
//    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:5.2.0-beta.3+1.20.1:api")
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:5.2.0-beta.3+1.20.1:api")

    /Xaero's Minimap/
    compileOnly fg.deobf("curse.maven:xaeros-minimap-263420:4593190")
//    implementation fg.deobf("curse.maven:xaeros-minimap-263420:4593190")

    /Xaero's Minimap Fair Play/
    compileOnly fg.deobf("curse.maven:xaeros-minimap-fair-play-edition-263466:4586338")
//    implementation fg.deobf("curse.maven:xaeros-minimap-fair-play-edition-263466:4586338")

    /Open Parties and Claims/
    compileOnly fg.deobf("curse.maven:open-parties-and-claims-636608:4627641")
//    implementation fg.deobf("curse.maven:open-parties-and-claims-636608:4627641")

    /FTB Chunks/
    compileOnly fg.deobf("curse.maven:ftb-library-forge-404465:4596511") //FTB Library
    compileOnly fg.deobf("curse.maven:architectury-api-419699:4633048") //Architectury
    compileOnly fg.deobf("curse.maven:ftb-teams-forge-404468:4623116") //FTB Teams
    compileOnly fg.deobf("curse.maven:ftb-chunks-forge-314906:4630372") //FTB Chunks

//    implementation fg.deobf("curse.maven:ftb-library-forge-404465:4596511") //FTB Library
//    implementation fg.deobf("curse.maven:architectury-api-419699:4633048") //Architectury
//    implementation fg.deobf("curse.maven:ftb-teams-forge-404468:4623116") //FTB Teams
//    implementation fg.deobf("curse.maven:ftb-chunks-forge-314906:4630372") //FTB Chunks


    /JourneyMap/
    compileOnly fg.deobf("curse.maven:journeymap-32274:4627235")
//    implementation fg.deobf("curse.maven:journeymap-32274:4627235")

}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version: forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors: mod_authors, mod_description: mod_description,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

// Example for how to get properties into the manifest for reading at runtime.
tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                'Specification-Title'     : mod_id,
                'Specification-Vendor'    : mod_authors,
                'Specification-Version'   : '1', // We are version 1 of ourselves
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : mod_authors,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    // This is the preferred method to reobfuscate your jar file
    finalizedBy 'reobfJar'
}


tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

